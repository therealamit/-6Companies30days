class Solution {

    public int minOperations(int[] nums, int[] numsDivide) {
        boolean flag=false;
        int ans=0;
        int minnum=0;
        Arrays.sort(nums);
        int count1=0;
        Map<Integer,Integer>map=new TreeMap<>();
        for(int i=0; i<nums.length; i++)
        {
             map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }

       

            for(Map.Entry<Integer,Integer>e:map.entrySet())
            {
                int cnum=e.getKey();
                   for(int i=0; i<numsDivide.length; i++)
                    {
                       if(numsDivide[i]%cnum==0)
                       {
                           continue;
                       }
                       else
                       {
                           flag=true;
                           break;
                       }
            
                    }
                    if(!flag)
                    {
                        minnum=e.getKey();
                        break;
                    }
                    else
                    {
                        ans=ans+e.getValue();
                    }
                    flag=false;
            }
            
        if(minnum==0)
        {
            return -1;
        }
       
        return ans;
    }
}
